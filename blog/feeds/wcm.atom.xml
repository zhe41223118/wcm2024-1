<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2024 網際內容管理 - wcm</title><link href="./" rel="alternate"></link><link href="./feeds/wcm.atom.xml" rel="self"></link><id>./</id><updated>2024-05-19T02:59:26+08:00</updated><entry><title>WCM w13 內容</title><link href="./wcm-w13-ai-and-guessing-game.html" rel="alternate"></link><published>2024-05-16T11:00:00+08:00</published><updated>2024-05-19T02:59:26+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-05-16:./wcm-w13-ai-and-guessing-game.html</id><summary type="html">&lt;p&gt;網際內容管理課程第十三週, 從單機猜數字遊戲與 AI 應用談起&lt;/p&gt;
</summary><content type="html">&lt;p&gt;網際內容管理課程第十三週, 從單機猜數字遊戲與 AI 應用談起&lt;/p&gt;


&lt;h1&gt;先看看 Linux&lt;/h1&gt;
&lt;p&gt;在 Linux 設定全域 Proxy 伺服器的位置, 可以是 /etc/environment 檔案中的:&lt;/p&gt;
&lt;p&gt;http_proxy="http://your_proxy_server:port"
https_proxy="http://your_proxy_server:port"&lt;/p&gt;
&lt;p&gt;能不能讓每一位學員都擁有遠端登入 stud.cycu.org 這台主機的帳號? How? 擁有帳號, 然後呢?&lt;/p&gt;
&lt;h1&gt;猜猜看遊戲&lt;/h1&gt;
&lt;p&gt;&lt;a href="./../downloads/guess_game.7z"&gt;guess_game.7z&lt;/a&gt; 是在 AI 輔助下, 將簡單的單人 &lt;a href="https://mde.tw/wcm2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/aaced903b90465ed1718edb68e3d10a6/raw/cfce17938843e1f9a9be75d0cf2c2dee7c702291/guess_game.py"&gt;Brython 線上猜數字遊戲&lt;/a&gt; 轉化為可以多人同場比賽猜數字的線上遊戲.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://229.cycu.org:88"&gt;http://229.cycu.org:88&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由於使用 Flask, 直接啟動模式僅用於程式開發, 若要部署在 Windows 或 Linux 電腦上, 還需進行下列考量:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有沒有比較好的啟動模式?&lt;/li&gt;
&lt;li&gt;要如何使用 https? 有沒有必要?&lt;/li&gt;
&lt;li&gt;能不能透過電腦的服務執行猜數字遊戲? 也就是隨著電腦開機後能直接自動執行?&lt;/li&gt;
&lt;li&gt;假如要配置使用者註冊制或儲存比賽資料, 該使用哪一種資料庫? SQLite 就可以, 還是需要使用 PostgreSQL?&lt;/li&gt;
&lt;li&gt;一但部署成功, 該如何設置網站的符號名稱?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最後, 延伸以上的多人網際程式架構, 是不是就可以開發一個網際協同產品開發網站?&lt;/p&gt;
&lt;p&gt;在現今 AI 系統的輔助下, 上列程式開發有沒有變得比較簡單?&lt;/p&gt;
&lt;p&gt;後續猜數字遊戲的開發倉儲: &lt;a href="https://github.com/mdecycu/guess_game"&gt;https://github.com/mdecycu/guess_game&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;值得加入的功能:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;具有管理者模式, 可以重新啟動伺服器.&lt;/li&gt;
&lt;li&gt;可讓參賽者經由 Github、Gmail 或其他支援 &lt;a href="https://developers.google.com/identity/protocols/oauth2"&gt;Oauth2&lt;/a&gt; 登入協定的帳號登入.&lt;/li&gt;
&lt;li&gt;加入資料庫, 儲存參賽者的得分資料、歷史紀錄並提供排行榜等功能.&lt;/li&gt;
&lt;li&gt;加入其他可多人線上參與競技或進行同步對話功能, 或納入其他專業相關的協同設計功能.&lt;/li&gt;
&lt;/ol&gt;</content><category term="wcm"></category><category term="w13"></category><category term="AI"></category><category term="Guessing"></category></entry><entry><title>WCM 第 11 週課程內容</title><link href="./wcm-w11-Brython.html" rel="alternate"></link><published>2024-05-02T11:00:00+08:00</published><updated>2024-05-16T03:38:19+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-05-02:./wcm-w11-Brython.html</id><summary type="html">&lt;p&gt;網際內容管理第 11 週課程, 說明如何在網頁中加入 Brython 程式應用&lt;/p&gt;
</summary><content type="html">&lt;p&gt;網際內容管理第 11 週課程, 說明如何在網頁中加入 Brython 程式應用&lt;/p&gt;


&lt;h1&gt;1a 評分倉儲&lt;/h1&gt;
&lt;p&gt;倉儲: &lt;a href="https://github.com/mdewcm2024/1astud-site"&gt;https://github.com/mdewcm2024/1astud-site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網站: &lt;a href="https://mdewcm2024.github.io/1astud-site"&gt;https://mdewcm2024.github.io/1astud-site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有關 git pull 評分倉儲之後的處理要點:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/INs2QE2_A6s?si=-4hwUy5l1FA0bw36" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;各組員或各組先將改版資料推向個人或分組的倉儲分支後, 再與主分支的版本內容合併:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/IeCdIhAebec?si=Com0Cz-TKJ5n82wf" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;5j 評分倉儲&lt;/h1&gt;
&lt;p&gt;倉儲: &lt;a href="https://github.com/mdewcm2024/5jstud-5jsite"&gt;https://github.com/mdewcm2024/5jstud-5jsite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網站: &lt;a href="https://mdewcm2024.github.io/5jstud-5jsite/"&gt;https://mdewcm2024.github.io/5jstud-5jsite/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="nfulist"&gt;從教務主機直接擷取資料&lt;/h1&gt;
&lt;p&gt;利用 &lt;a href="./../downloads/wsgi_v1_py.txt"&gt;wsgi_v1.py&lt;/a&gt; 可以取得結果: &lt;a href="./../downloads/wsgi_v1_output.txt"&gt;wsgi_v1_output.txt&lt;/a&gt; 表示可以利用 Flask 建置網站程式取下教務主機中的相關資料.&lt;/p&gt;
&lt;p&gt;以下影片說明如何利用 wsgi_v2.py 擷取各學期班級課表:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/Seg9jHuh72I?si=KKgo5loKzQY_7wZQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;說明如何將 Python 程式配置為 Windows 操作系統中的服務:&lt;/p&gt;
&lt;iframe width="1120" height="630" src="https://www.youtube.com/embed/UgXZcpfSYXU?si=vNYGReZXxRsk32Kt" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;經由上述影片將程式配置在伺服器後, 可以從&lt;a href="http://229.cycu.org:9447/?semester=901&amp;amp;classid=設一甲"&gt;229 主機取下設一甲 90 學年度第一學期的課表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;利用 &lt;a href="./../downloads/wsgi_v2_py.txt"&gt;wsgi_v2.py&lt;/a&gt; 可以取得以下結果:&lt;/p&gt;
&lt;p&gt;&lt;img src="./../images/wsgi_v2_output.png" width="551" height="647" /&gt;&lt;/p&gt;
&lt;h1&gt;Brython 程式環境&lt;/h1&gt;
&lt;p&gt;將 &lt;a href="/downloads/brython_w_editor_html.txt"&gt;brython_w_editor_html.txt&lt;/a&gt; 超文件內容放入網誌中, 即可得到下列內容.&lt;/p&gt;
&lt;p&gt;若要放入動態網站, 則必須注意各引用頁面是由 cmsimde 目錄中啟動, 必須使用 &lt;a href="/downloads/brython_on_editor.txt"&gt;brython_on_editor.txt&lt;/a&gt; 超文件格式.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (&lt;a href="./../downloads/practice_html.txt"&gt;practice_html.txt&lt;/a&gt; 動態頁面超文件).&lt;/p&gt;
&lt;p&gt;&lt;a href="./../downloads/practice_html.txt"&gt;practice_html.txt&lt;/a&gt; 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.&lt;/p&gt;
&lt;p&gt;亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 &lt;a href="https://docs.python.org/3/tutorial/classes.html"&gt;class&lt;/a&gt; 後, 在範例導入時透過 &lt;a href="https://docs.python.org/3/tutorial/classes.html#instance-objects"&gt;instance&lt;/a&gt; 引用.&lt;/p&gt;
&lt;pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"&gt;&amp;lt;!-- 啟動 Brython --&amp;gt;
&amp;lt;script&amp;gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&amp;lt;/script&amp;gt;&lt;/pre&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="WCM"></category><category term="Brython"></category><category term="w11"></category></entry><entry><title>WCM 課程期中整理</title><link href="./wcm-midterm.html" rel="alternate"></link><published>2024-04-14T11:00:00+08:00</published><updated>2024-04-15T14:23:26+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-04-14:./wcm-midterm.html</id><summary type="html">&lt;p&gt;網際內容管理課程的英文名稱為 Web-based Content Management, 課程目標是讓學員得以運用網頁來管理與個人或專業領域應用相關的內容. 當然, 我們還想啟發學員對於網頁與內容管理發展趨勢的思考, 並且針對學員選課, 評定出一個合理的修課成績!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;網際內容管理課程的英文名稱為 Web-based Content Management, 課程目標是讓學員得以運用網頁來管理與個人或專業領域應用相關的內容. 當然, 我們還想啟發學員對於網頁與內容管理發展趨勢的思考, 並且針對學員選課, 評定出一個合理的修課成績!&lt;/p&gt;


&lt;h1&gt;網頁式內容管理&lt;/h1&gt;
&lt;p&gt;目前無論是 Github 的 Codespaces, Gitpod 或 Replit 都讓使用者可以直接在網頁瀏覽器中維護網站內容. 其中 Replit 還提供手機 App 讓使用者透過手機或平板管理網頁內容.&lt;/p&gt;
&lt;p&gt;網際內容管理課程將網頁內容管理系統與網頁資料放在同一個倉儲中, 且讓使用者寄存在 Github 中, 只要能夠執行 Python 的雲端或近端環境都能開啟網頁編輯程式進行改版, 而編輯完成的網頁資料則可在 Github 倉儲中透過 Pages 的全球資訊網伺服器功能呈現網站內容.&lt;/p&gt;
&lt;p&gt;網際內容管理課程所採用的管理系統採用 Python Flask 編寫, 其中除了章節式的網頁內容採超文件的 H 標註進行分頁外, 還導入 Pelican 與 Reveal.js 等兩個延伸套件, 其中 Pelican 可用來建立網誌, 而 Reveal.js 則可用來建立網頁上的簡報資料.&lt;/p&gt;
&lt;p&gt;學習議題: 如何建立 Github 上的網站? 如何管理內容? 如何建立章節式網站? 能放入甚麼多媒體內容? 靜態圖文? 動態圖文? 線上遊戲? 3D 零組件展示? 如何建立網頁系統中的網誌? 如何建立網頁系統中的簡報?&lt;/p&gt;
&lt;h1&gt;Python 程式系統&lt;/h1&gt;
&lt;p&gt;上課用的電腦中配置了一套舊版的可攜式 Python 程式系統, 可讓使用者建立新版的可攜式 Python 程式系統, 放入 USB 隨身碟後, 可以在任何一台 64 位元的 Winodws 操作系統中使用, 主要目的除了可用來維護位於 Github 的網頁內容之外, 也可用來開發各種 Python 程式, 或與其他 Windows 應用套件結合使用, 例如: 與 CoppeliaSim 機器人模擬場景結合, 建立機電控制系統, 或與 Siemens NX 的 API 延伸程式結合應用.&lt;/p&gt;
&lt;p&gt;學習議題: 如何利用電腦輔助設計室的舊 Python 建立新的可攜環境? 在網頁中置入 Python 語法的程式加上對 Javascript 與超文件語法的了解後, 能夠應用在那些領域? (精密)機械設計流程? 設計運算? 特定系統模擬?&lt;/p&gt;
&lt;h1&gt;網頁上的 IDE&lt;/h1&gt;
&lt;p&gt;IDE 是甚麼? 可以將 Replit、Codespaces 與 Gitpod 當成 IDE 用來開發各種程式嗎? 與近端操作系統上的開發有何不同? 多人協同? 這樣安全嗎?&lt;/p&gt;
&lt;p&gt;學習議題: 學會使用網頁上的各種 IDE 之後, 有沒有甚麼感想或心得?&lt;/p&gt;
&lt;h1&gt;AI 工具&lt;/h1&gt;
&lt;p&gt;ChatGPT 與 Gemini Pro 都可以直接利用 Gmail 帳號登入, 初級應用目前都可免費使用, 這兩個 AI 工具可以協助我們解決甚麼問題? 為什麼有人驚這些工具為天人? 有人卻覺得還好而已, 並無法從中挖出甚麼資料?&lt;/p&gt;
&lt;p&gt;學習議題: AI 工具曾經協助我們解決甚麼問題? &lt;/p&gt;
&lt;h1&gt;實作練習問題&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;一份採 UTF-8 中文編碼的 .csv (例如: &lt;a href="http://229.cycu.org/5j_wcm2024_midterm.csv"&gt;5j_wcm2024_midterm.csv&lt;/a&gt;)在 Windows Excel 2016 開啟之後呈現亂碼, 該如何設定改為用 UTF-8 編碼?&lt;/li&gt;
&lt;li&gt;請根據上一個 .csv (csv 是甚麼格式的資料?) 檔案內容, 在個人的網頁與網誌中列出每一位學員的 github wcm2024 倉儲與網頁連結. (第一次請直接用手動輸入的方式建立 html 檔案內容, 之後再思考如何讀取此一檔案後, 能直接將所需要的倉儲與網頁連結呈現在個人網站或網誌的特定位置)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://229.cycu.org/2023%20Programming%20for%20Absolute%20Beginners%20-%20Using%20the%20JavaScript%20Programming%20Language.pdf"&gt;這一本書&lt;/a&gt; 的第一章在講甚麼?能不能將其中練習編寫的內容, 放入個人的網頁與網誌?&lt;/li&gt;
&lt;li&gt;為什麼 wcm2024 倉儲中的 cms.bat 在 Windows 啟動之後, 若同時多人連線, 系統會無法負荷, 同一台電腦硬體有沒有可能採其他方法啟動, 可以同時讓多人連線且不會產生延遲或停頓的問題? 例如採 wsgi 方式啟動, 這該如何進行? 當設定好讓 Flask 編寫的網際內容管理系統透過效率較高的 wsgi 模式執行後, 如何讓執行程式與電腦開機同步執行? 直接執行套件與透過 Windows services 執行有何不同? NSSM 是什麼工具?&lt;/li&gt;
&lt;li&gt;如何在一台 Windows (Ubuntu) 電腦快速建立多人帳號? 建立多人帳號之後, 如何透過程式將帳號密碼寄給使用者?&lt;/li&gt;
&lt;li&gt;承接上一題: 一個採用 Flask 編寫的伺服器系統, 該如何在  Windows 環境中以 wsgi 方式啟動?&lt;/li&gt;
&lt;li&gt;wcm2024 課程中曾經提到可以利用舊的可攜 Python 程式環境建立新的 Python 可攜程式環境, 但該如何進行?&lt;/li&gt;
&lt;li&gt;假如希望直接在網頁中利用 Brython 建立一個掃地機器人的工作模擬系統, 該如何進行?&lt;/li&gt;
&lt;li&gt;wcm2024 課程除了可以使用 &lt;a href="https://chat.openai.com/"&gt;ChatGPT&lt;/a&gt; 外, 還能夠使用 Google &lt;a href="https://developers.googleblog.com/2024/04/gemini-15-pro-in-public-preview-with-new-features.html"&gt;Gemini Pro&lt;/a&gt;, 請試著在解決上列問題時, 善用這兩個系統, 並將使用過程與心得整理在個人的課程網頁與網誌中.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="brush: python"&gt;
    from browser import document, window, html, load

    # 动态加载 Matter.js 库 (假设使用 CDN)
    load("https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.19.0/matter.min.js")
    #print(dir(window.Matter.Bodies.rectangle()))
    # 创建 canvas 元素
    canvas = html.CANVAS(width=800, height=800)
    canvas.id = "canvas"
    canvas.style = {"border": "1px solid red"}  # 添加边框样式
    brython_div = document["brython_div1"]
    brython_div &lt;= canvas


    # 获取 Matter.js 模块别名
    matter = window.Matter
    Engine = matter.Engine
    Render = matter.Render
    Runner = matter.Runner
    Bodies = matter.Bodies
    Composite = matter.Composite

    # 创建引擎
    engine = Engine.create()
    print(dir(engine))
    # 创建渲染器，使用 canvas 元素的 ID
    render = Render.create({
        'element': document['canvas'],
        'engine': engine
    })

    # 创建红色矩形
    rectangle = Bodies.rectangle(200, 200, 80, 80, {
        'render': {
            'fillStyle': 'red'
        }
    })
    print(rectangle)

    # 将矩形添加到世界
    Composite.add(engine.world, [rectangle])

    # 创建运行器
    runner = Runner.create()

    # 运行引擎
    Runner.run(runner, engine)

    # 运行渲染器
    Render.run(render)

&lt;/pre&gt;

&lt;p&gt;針對以上課程內容, 請利用以下留言系統進行討論:&lt;/p&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script&gt;
/**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    var d = document, s = d.createElement('script');
    s.src = 'https://https-mde-tw-eng.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="https://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</content><category term="WCM"></category><category term="Brython"></category><category term="w9"></category></entry></feed>